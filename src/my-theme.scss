@import '~@angular/material/theming';

@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
// $myTravel-green-light : #c8e6c9;
// $myTravel-green-normal : #81c784;

$md-mygreen: (
    50 : #f2f9ef,
    100 : #def0d6,
    200 : #c8e6bb,
    300 : #b2dba0,
    400 : #a2d48b,
    500 : #91cc77,
    600 : #89c76f,
    700 : #7ec064,
    800 : #74b95a,
    900 : #62ad47,
    A100 : #ffffff,
    A200 : #deffd3,
    A400 : #b8ffa0,
    A700 : #a4ff86,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #000000,
        600 : #000000,
        700 : #000000,
        800 : #000000,
        900 : #000000,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);



$candy-app-primary: mat-palette($md-mygreen);
$candy-app-accent:  mat-palette($mat-green, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);